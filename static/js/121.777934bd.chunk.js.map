{"version":3,"sources":["../node_modules/arcgis-js-api/layers/graphics/sources/support/CSVSourceWorker.js","../node_modules/dojo-dstore/Csv.js"],"names":["define","e","t","i","n","r","o","a","l","u","s","d","f","c","p","m","y","g","h","v","F","I","N","_","Object","defineProperty","value","b","createDrawingInfo","x","csvLatitudeFieldNames","csvLongitudeFieldNames","csvDetectedDelimiters","T","w","D","this","E","_parseInfo","RegExp","regexp","group","factor","exec","NaN","replace","decimal","S","Number","isInteger","isFinite","Math","floor","j","_fieldsIndex","_queryEngine","prototype","destroy","load","label","all","_fetch","url","_checkProjection","parsing","spatialReference","sent","_parse","_createQueryEngine","layerDefinition","extent","fullExtent","timeInfo","timeExtent","start","end","applyEdits","queryFeatures","executeQuery","signal","queryFeatureCount","executeQueryForCount","queryObjectIds","executeQueryForIds","queryExtent","executeQueryForExtent","urlToObject","path","query","responseType","data","columnDelimiter","locationInfo","latitudeFieldName","latitudeField","longitudeFieldName","longitudeField","slice","length","_readFirstLine","csv","_inferDelimiter","split","name","drawingInfo","geometryType","objectIdField","fields","xmin","POSITIVE_INFINITY","ymin","xmax","NEGATIVE_INFINITY","ymax","wkid","_inferLocationInfo","_inferFields","Map","set","toLowerCase","get","mixin","some","type","alias","editable","nullable","unshift","startTimeField","endTimeField","trackIdField","forEach","indexOf","_sampleLines","map","trim","push","_inferFieldType","test","isNaN","Date","_isValidDate","reduce","toString","call","getTime","match","substring","Set","q","O","L","add","C","delimiter","fieldNames","newline","V","parse","k","shift","R","P","M","G","_parseCoordinateValue","Q","U","has","Y","W","equals","isWebMercator","$","z","A","lngLatToXY","projectMany","SpatialReference","WGS84","Z","default","hasM","hasZ","B","cacheSpatialQueries","featureStore","H","J","X","K","ee","te","addMany","abs","parseFloat","trys","checkProjectionSupport","lang","declare","quoteRx","doubleQuoteRx","singleQuoteRx","arrays2hash","keys","values","obj","len","str","parts","part","numlines","numparts","lines","numquotes","prefix","lineloop","console","warn","toCsv","options","stringify","alwaysQuote","output","undefined","trailingNewline"],"mappings":"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","file":"static/js/121.777934bd.chunk.js","sourcesContent":["// COPYRIGHT © 2019 Esri\n//\n// All rights reserved under the copyright laws of the United States\n// and applicable international laws, treaties, and conventions.\n//\n// This material is licensed for use under the Esri Master License\n// Agreement (MLA), and is bound by the terms of that agreement.\n// You may redistribute and use this code without modification,\n// provided you adhere to the terms of the MLA and include this\n// copyright notice.\n//\n// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english\n//\n// For additional information, contact:\n// Environmental Systems Research Institute, Inc.\n// Attn: Contracts and Legal Services Department\n// 380 New York Street\n// Redlands, California, USA 92373\n// USA\n//\n// email: contracts@esri.com\n//\n// See http://js.arcgis.com/4.14/esri/copyright.txt for details.\n\ndefine([\"require\",\"exports\",\"../../../../core/tsSupport/generatorHelper\",\"../../../../core/tsSupport/awaiterHelper\",\"dojo/number\",\"dstore/Csv\",\"../../../../geometry\",\"../../../../request\",\"../../../../core/Error\",\"../../../../core/has\",\"../../../../core/lang\",\"../../../../core/promiseUtils\",\"../../../../core/urlUtils\",\"../../../../geometry/projection\",\"../../../../geometry/support/spatialReferenceUtils\",\"../../../../geometry/support/webMercatorUtils\",\"../../OptimizedFeature\",\"../../OptimizedGeometry\",\"../../data/FeatureStore\",\"../../data/projectionSupport\",\"../../data/QueryEngine\",\"./clientSideDefaults\",\"../../../support/FieldsIndex\"],function(e,t,i,n,r,o,a,l,u,s,d,f,c,p,m,y,g,h,v,F,I,N,_){Object.defineProperty(t,\"__esModule\",{value:!0});var b=N.createDrawingInfo(\"esriGeometryPoint\"),x=[\"esriFieldTypeSmallInteger\",\"esriFieldTypeInteger\",\"esriFieldTypeSingle\",\"esriFieldTypeDouble\",\"esriFieldTypeLong\"];t.csvLatitudeFieldNames=[\"lat\",\"latitude\",\"y\",\"ycenter\",\"latitude83\",\"latdecdeg\",\"point-y\"],t.csvLongitudeFieldNames=[\"lon\",\"lng\",\"long\",\"longitude\",\"x\",\"xcenter\",\"longitude83\",\"longdecdeg\",\"point-x\"],t.csvDetectedDelimiters=[\",\",\" \",\";\",\"|\",\"\\t\"];var T=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,w=[0,0],D=function(){function e(e,t){this.x=e,this.y=t}return e}(),E=function(){var e=r._parseInfo(),t=new RegExp(\"^\"+e.regexp+\"$\"),i=new RegExp(\"[\"+e.group+\"\\\\s\\\\xa0]\",\"g\"),n=e.factor;return function(r){var o=t.exec(r);if(e.factor=n,!o)return NaN;var a=o[1];if(!o[1]){if(!o[2])return NaN;a=o[2],e.factor*=-1}return+(a=a.replace(i,\"\").replace(e.decimal,\".\"))*e.factor}}(),S=function(){return\"isInteger\"in Number?Number.isInteger:function(e){return\"number\"==typeof e&&isFinite(e)&&Math.floor(e)===e}}(),j=function(){function e(){this._fieldsIndex=null,this._queryEngine=null}return e.prototype.destroy=function(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=null,this._fieldsIndex=null},e.prototype.load=function(e,t){return void 0===t&&(t={}),n(this,void 0,void 0,function(){var n,r,o,a,l;return i(this,function(i){switch(i.label){case 0:return[4,f.all([this._fetch(e.url,t),this._checkProjection(t&&e.parsing&&e.parsing.spatialReference)])];case 1:return n=i.sent()[0],r=this._parse(n,e.parsing),this._queryEngine=this._createQueryEngine(n,r),r.layerDefinition.extent=this._queryEngine.fullExtent,r.layerDefinition.timeInfo&&(o=this._queryEngine.timeExtent,a=o.start,l=o.end,r.layerDefinition.timeInfo.timeExtent=[a,l]),[2,r]}})})},e.prototype.applyEdits=function(){return n(this,void 0,void 0,function(){return i(this,function(e){throw new u(\"csv-source:editing-not-supported\",\"applyEdits() is not supported on CSVLayer\")})})},e.prototype.queryFeatures=function(e,t){return void 0===e&&(e={}),void 0===t&&(t={}),n(this,void 0,void 0,function(){return i(this,function(i){return[2,this._queryEngine.executeQuery(e,t.signal)]})})},e.prototype.queryFeatureCount=function(e,t){return void 0===e&&(e={}),void 0===t&&(t={}),n(this,void 0,void 0,function(){return i(this,function(i){return[2,this._queryEngine.executeQueryForCount(e,t.signal)]})})},e.prototype.queryObjectIds=function(e,t){return void 0===e&&(e={}),void 0===t&&(t={}),n(this,void 0,void 0,function(){return i(this,function(i){return[2,this._queryEngine.executeQueryForIds(e,t.signal)]})})},e.prototype.queryExtent=function(e,t){return void 0===e&&(e={}),void 0===t&&(t={}),n(this,void 0,void 0,function(){return i(this,function(i){return[2,this._queryEngine.executeQueryForExtent(e,t.signal)]})})},e.prototype._fetch=function(e,t){return n(this,void 0,void 0,function(){var n,r;return i(this,function(i){switch(i.label){case 0:if(!e)throw new u(\"csv-source:invalid-source\",\"url not defined\");return n=c.urlToObject(e),[4,l(n.path,{query:n.query,responseType:\"text\",signal:t.signal})];case 1:return r=i.sent(),[2,r.data]}})})},e.prototype._parse=function(e,t){void 0===t&&(t={});for(var i={columnDelimiter:t.columnDelimiter,layerDefinition:null,locationInfo:{latitudeFieldName:t.latitudeField,longitudeFieldName:t.longitudeField}};e&&\"\\n\"===e[0];)e=e.slice(1);\"\\n\"!==e[e.length-1]&&(e+=\"\\n\");var n=this._readFirstLine(e);if(!n)throw new u(\"csv\",\"CSV is empty\",{csv:e});if(!t.columnDelimiter){var r=this._inferDelimiter(n);if(!r)throw new u(\"csv-source:invalid-delimiter\",\"Unable to detect the delimiter from CSV\");i.columnDelimiter=r}var o=n.split(i.columnDelimiter),a=i.layerDefinition={name:\"csv\",drawingInfo:b,geometryType:\"esriGeometryPoint\",objectIdField:null,fields:[],timeInfo:t.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:t.spatialReference||{wkid:102100}}};if(!t.latitudeField||!t.longitudeField){var l=this._inferLocationInfo(o);if(!t.longitudeField&&!l.longitudeFieldName||!t.latitudeField&&!l.latitudeFieldName)throw new u(\"csv\",\"Unable to identify latitudeField and/or longitudeField from CSV\");i.locationInfo={longitudeFieldName:t.longitudeField||l.longitudeFieldName,latitudeFieldName:t.latitudeField||l.latitudeFieldName}}var s=this._inferFields(e,i.columnDelimiter,o,i.locationInfo);if(t.fields&&t.fields.length){for(var f=new Map,c=0,p=t.fields;c<p.length;c++){var m=p[c];f.set(m.name.toLowerCase(),m)}for(var y=0,g=s;y<g.length;y++){var m=g[y],h=f.get(m.name.toLowerCase());if(h){var v=m.name;d.mixin(m,h),m.name=v}}}if(a.fields=s,!a.fields.some(function(e){return\"esriFieldTypeOID\"===e.type&&(a.objectIdField=e.name,!0)})){var m={name:\"__OBJECTID\",alias:\"__OBJECTID\",type:\"esriFieldTypeOID\",editable:!1,nullable:!1};a.objectIdField=m.name,a.fields.unshift(m)}if(this._fieldsIndex=new _(a.fields),a.timeInfo){var F=a.timeInfo;if(F.startTimeField){var I=this._fieldsIndex.get(F.startTimeField);I?(F.startTimeField=I.name,I.type=\"esriFieldTypeDate\"):F.startTimeField=null}if(F.endTimeField){var N=this._fieldsIndex.get(F.endTimeField);N?(F.endTimeField=N.name,N.type=\"esriFieldTypeDate\"):F.endTimeField=null}if(F.trackIdField){var x=this._fieldsIndex.get(F.trackIdField);F.trackIdField=x?x.name:null}F.startTimeField||F.endTimeField||(a.timeInfo=null)}return i},e.prototype._inferLocationInfo=function(e){var i=null,n=null;return e.forEach(function(e){var r,o=e.toLowerCase();r=t.csvLatitudeFieldNames.indexOf(o),-1===r||n||(n=e),-1===(r=t.csvLongitudeFieldNames.indexOf(o))||i||(i=e)}),{longitudeFieldName:i,latitudeFieldName:n}},e.prototype._inferFields=function(e,t,i,n){for(var r=[],o=this._sampleLines(e).map(function(e){return e.split(t).map(function(e){return e.trim()})}),a=this,l=0;l<i.length;l++)!function(e){var t=i[e];if(t===n.longitudeFieldName||t===n.latitudeFieldName)r.push({name:t,type:\"esriFieldTypeDouble\",alias:t});else{var l=o.map(function(t){return t[e]}),u=a._inferFieldType(l),s={name:t,type:null,alias:t};switch(u){case\"integer\":s.type=\"esriFieldTypeInteger\";break;case\"double\":s.type=\"esriFieldTypeDouble\";break;case\"date\":s.type=\"esriFieldTypeDate\",s.length=36;break;default:s.type=\"esriFieldTypeString\",s.length=255}r.push(s)}}(l);return r},e.prototype._inferFieldType=function(e){var t=this;if(!e.length)return\"string\";var i=/[^+-.,0-9]/;return e.map(function(e){var n=!1;if(\"\"===e||i.test(e))n=!0;else{var r=E(e);if(!isNaN(r))return/[.,]/.test(e)?\"double\":!S(r)||r>214783647||r<-214783648?\"double\":\"integer\";if(-1===e.indexOf(\"E\"))n=!0;else{if(r=Number(e),!isNaN(r))return\"double\";if(-1===e.indexOf(\",\"))n=!0;else{if(e=e.replace(\",\",\".\"),r=Number(e),!isNaN(r))return\"double\";n=!0}}}if(n){if(!/^[-]?\\d*[.,]?\\d*$/.test(e)){var o=new Date(e);return t._isValidDate(o,e)?\"date\":\"string\"}return\"string\"}return\"string\"}).reduce(function(e,t){return e===t?t:\"string\"===e||\"string\"===t?\"string\":\"double\"===e||\"double\"===t?\"double\":void 0})},e.prototype._isValidDate=function(e,t){if(!e||\"[object Date]\"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;var i=!0;if(s(\"chrome\")&&/\\d+\\W*$/.test(t)){var n=t.match(/[a-zA-Z]{2,}/);if(n){for(var r=!1,o=0;!r&&o<=n.length;)r=!T.test(n[o]),o++;i=!r}}return i},e.prototype._readFirstLine=function(e){return e.substring(0,e.indexOf(\"\\n\")).trim()},e.prototype._sampleLines=function(e,t){void 0===t&&(t=10);for(var i=!1,n=[],r=e.indexOf(\"\\n\")+1;!i&&n.length<t;){var o=e.indexOf(\"\\n\",r);if(-1!==o){var a=void 0;a=-1===o&&r<e.length-1?e.substring(r).trim():e.substring(r,o).trim(),a&&n.push(a),r=o+1}else i=!0}return n},e.prototype._inferDelimiter=function(e){var i=0,n=\"\";return t.csvDetectedDelimiters.forEach(function(t){var r=e.split(t).length;r>i&&(i=r,n=t)}),\"\"===n?null:n},e.prototype._createQueryEngine=function(e,t){for(var i,n=t.locationInfo,r=n.latitudeFieldName,l=n.longitudeFieldName,u=t.layerDefinition,s=u.objectIdField,d=u.fields,f=u.extent,c=u.timeInfo,F=[],N=[],_=new Set,b=new Set,T=[],S=0,j=d;S<j.length;S++){var q=j[S],O=q.name,L=q.type;\"esriFieldTypeDate\"===L?_.add(O):x.indexOf(L)>-1&&b.add(O),O!==s&&T.push(O)}var C=new o;C.delimiter=t.columnDelimiter,C.fieldNames=T,C.newline=\"\\n\";var V=C.parse(e),k=0;V.shift();for(var R=0,P=V;R<P.length;R++){var M=P[R],G=this._parseCoordinateValue(M[r]),Q=this._parseCoordinateValue(M[l]);if(null!=Q&&null!=G&&!isNaN(G)&&!isNaN(Q)){M[r]=G,M[l]=Q;for(var U in M)if(U!==r&&U!==l)if(_.has(U)){var Y=new Date(M[U]);M[U]=this._isValidDate(Y,M[U])?Y.getTime():null}else if(b.has(U)){var W=E(M[U]);isNaN(W)?M[U]=null:M[U]=W}M[s]=k,k++,F.push(new D(Q,G)),N.push(M)}}if(!m.equals({wkid:4326},f.spatialReference))if(m.isWebMercator(f.spatialReference))for(var $=0,z=F;$<z.length;$++){var A=z[$];i=y.lngLatToXY(A.x,A.y,w),A.x=i[0],A.y=i[1]}else F=p.projectMany(F,a.SpatialReference.WGS84,f.spatialReference,null,!0);for(var Z=new v.default({geometryType:\"esriGeometryPoint\",hasM:!1,hasZ:!1}),B=new I.default({fields:t.layerDefinition.fields,geometryType:\"esriGeometryPoint\",hasM:!1,hasZ:!1,timeInfo:c,objectIdField:s,spatialReference:f.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:Z}),H=[],J=0;J<F.length;J++){var X=F[J],K=X.x,ee=X.y,te=N[J];te[s]=J+1,H.push(new g.default(new h.default([],[K,ee]),te,null,te[s]))}return Z.addMany(H),B},e.prototype._parseCoordinateValue=function(e){if(null==e||\"\"===e)return null;var t=E(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t},e.prototype._checkProjection=function(e){return n(this,void 0,void 0,function(){var t;return i(this,function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),[4,F.checkProjectionSupport(m.WGS84,e)];case 1:return i.sent(),[3,3];case 2:throw t=i.sent(),new u(\"csv-layer\",\"Projection not supported\");case 3:return[2]}})})},e}();t.default=j});","define([\n\t'dojo/_base/lang',\n\t'dojo/_base/declare'\n], function (lang, declare) {\n\t// originally from https://github.com/kfranqueiro/dojo-smore/blob/master/Csv.js\n\tvar quoteRx = /^\\s*\"([\\S\\s]*)\"\\s*$/,\n\t\tdoubleQuoteRx = /\"\"/g,\n\t\tsingleQuoteRx = /\"/g;\n\t\n\tfunction arrays2hash(keys, values) {\n\t\t// Takes 2 arrays and builds a hash where the keys are from the first array,\n\t\t// and the values are from the second.\n\t\tvar obj = {},\n\t\t\tlen = keys.length,\n\t\t\ti;\n\t\t\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tobj[keys[i]] = values[i];\n\t\t}\n\t\treturn obj;\n\t}\n\t\n\treturn declare(null, {\n\t\t// summary:\n\t\t//\t\tA store mixin for supporting CSV format.\n\t\t\n\t\t// fieldNames: Array?\n\t\t//\t\tIf specified, indicates names of fields in the order they appear in\n\t\t//\t\tCSV records.  If unspecified, the first line of the CSV will be treated\n\t\t//\t\tas a header row, and field names will be populated from there.\n\t\tfieldNames: null,\n\t\t\n\t\t// delimiter: String\n\t\t//\t\tDelimiter between fields; default is a comma.\n\t\tdelimiter: ',',\n\t\t\n\t\t// newline: String\n\t\t//\t\tCharacter sequence to consider a newline.\n\t\t//\t\tDefaults to '\\r\\n' (CRLF) as per RFC 4180.\n\t\tnewline: '\\r\\n',\n\t\t\n\t\t// trim: Boolean\n\t\t//\t\tIf true, leading/trailing space will be trimmed from any unquoted values.\n\t\ttrim: false,\n\t\t\n\t\tparse: function (str) {\n\t\t\t// handles the parsing of the incoming data as CSV.\t\t\t\n\n\t\t\tvar data = [],\n\t\t\t\tlines = str.split(this.newline),\n\t\t\t\tfieldNames = this.fieldNames,\n\t\t\t\tnumquotes = 0, // tracks number of \" characters encountered\n\t\t\t\tvalues = [], // records values in the current record\n\t\t\t\tvalue = '',\n\t\t\t\tprefix = '', // used to re-add delimiters and newlines to a spanning value\n\t\t\t\tparts, part, numlines, numparts, match,\n\t\t\t\ti, j, k;\n\t\t\t\n\t\t\t// Outer loop iterates over lines.  It's labeled so that inner loop\n\t\t\t// can jump out if an invalid value is encountered.\n\t\t\tlineloop:\n\t\t\tfor (i = 0, numlines = lines.length; i < numlines; i++) {\n\t\t\t\tif (!lang.trim(lines[i])) { continue; } // ignore blank lines\n\t\t\t\tparts = lines[i].split(this.delimiter);\n\t\t\t\t\n\t\t\t\t// Inner loop iterates over \"parts\" (pieces of the line, split by\n\t\t\t\t// the configured delimiter).\n\t\t\t\tfor (j = 0, numparts = parts.length; j < numparts; j++) {\n\t\t\t\t\tpart = parts[j];\n\t\t\t\t\tk = -1;\n\t\t\t\t\t\n\t\t\t\t\t// Apply any leftovers in prefix before the next part, then clear it.\n\t\t\t\t\tvalue += prefix + part;\n\t\t\t\t\tprefix = '';\n\t\t\t\t\t\n\t\t\t\t\t// Count number of quotes in part to see whether we have a matching set.\n\t\t\t\t\twhile ((k = part.indexOf('\"', k + 1)) >= 0) { numquotes++; }\n\t\t\t\t\t\n\t\t\t\t\tif (numquotes % 2 === 0) {\n\t\t\t\t\t\t// Even number of quotes: we're done with this value.\n\t\t\t\t\t\tif (numquotes > 0) {\n\t\t\t\t\t\t\tmatch = quoteRx.exec(value);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\t// Good quoted string; unescape any quotes within.\n\t\t\t\t\t\t\t\tvalues.push(match[1].replace(doubleQuoteRx, '\"'));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// If the completed value didn't match the RegExp, it's invalid\n\t\t\t\t\t\t\t\t// (e.g. quotes were inside the value but not surrounding it).\n\t\t\t\t\t\t\t\t// Jump out of the outer loop and start fresh on the next line.\n\t\t\t\t\t\t\t\tconsole.warn('Csv: discarding row with invalid value: ' + value);\n\t\t\t\t\t\t\t\tvalues = [];\n\t\t\t\t\t\t\t\tvalue = '';\n\t\t\t\t\t\t\t\tnumquotes = 0;\n\t\t\t\t\t\t\t\tcontinue lineloop;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// No quotes; push value as-is or trimmed.\n\t\t\t\t\t\t\t// (If this is the header row, trim regardless of setting.)\n\t\t\t\t\t\t\tvalues.push(this.trim || !fieldNames ? lang.trim(value) : value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue = '';\n\t\t\t\t\t\tnumquotes = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Open quoted value: add delimiter to current value on next run.\n\t\t\t\t\t\t// (i.e., we split on an instance of the delimiter character that is\n\t\t\t\t\t\t// actually *inside* a quoted value.)\n\t\t\t\t\t\tprefix = this.delimiter;\n\t\t\t\t\t}\n\t\t\t\t} // End of inner loop (delimited parts)\n\t\t\t\t\n\t\t\t\tif (numquotes === 0) {\n\t\t\t\t\t// Line ended cleanly, push values and reset.\n\t\t\t\t\tif (!fieldNames) {\n\t\t\t\t\t\t// We don't know any field names yet, so pick them up from the\n\t\t\t\t\t\t// first row of data.\n\t\t\t\t\t\tfieldNames = this.fieldNames = values;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.push(arrays2hash(fieldNames, values));\n\t\t\t\t\t}\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\t\t\t\t\t// We're in the middle of a quoted value with a newline in it,\n\t\t\t\t\t// so add a newline to it on the next iteration.\n\t\t\t\t\tprefix = this.newline;\n\t\t\t\t}\n\t\t\t} // End of outer loop (lines)\n\t\t\t\n\t\t\t// The data is assembled; return\n\t\t\treturn data;\n\t\t},\n\t\ttoCsv: function (options) {\n\t\t\t// summary:\n\t\t\t//\t\tReturns data from Memory store, re-exported to CSV format.\n\t\t\treturn this.stringify(this.data, options);\n\t\t},\n\t\tstringify: function (data, options) {\n\t\t\t// summary:\n\t\t\t//\t\tSerializes data as CSV\n\t\t\t// options: Object?\n\t\t\t//\t\tOptional object specifying options affecting the CSV output.\n\t\t\t//\t\t* alwaysQuote: if true (default), all values will be quoted;\n\t\t\t//\t\t\tif false, values will be quoted only if they need to be.\n\t\t\t//\t\t* trailingNewline: if true, a newline will be included at the end\n\t\t\t//\t\t\tof the string (after the last record).  Default is false.\n\t\t\t\n\t\t\toptions = options || {};\n\t\t\t\n\t\t\tvar alwaysQuote = options.alwaysQuote,\n\t\t\t\tfieldNames = this.fieldNames,\n\t\t\t\tdelimiter = this.delimiter,\n\t\t\t\tnewline = this.newline,\n\t\t\t\toutput = '',\n\t\t\t\ti, j, value, needsQuotes;\n\t\t\t\n\t\t\t// Process header row first (-1 case), then all data rows.\n\t\t\tfor (i = -1; i < data.length; i++) {\n\t\t\t\tif (i > -1) { output += newline; }\n\t\t\t\tfor (j = 0; j < fieldNames.length; j++) {\n\t\t\t\t\tvalue = i < 0 ? fieldNames[j] : data[i][fieldNames[j]];\n\t\t\t\t\tif (value === null || value === undefined) {\n\t\t\t\t\t\tvalue = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof value !== 'string') {\n\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t}\n\t\t\t\t\tneedsQuotes = alwaysQuote ||\n\t\t\t\t\t\tvalue.indexOf('\"') >= 0 || value.indexOf(delimiter) >= 0;\n\t\t\t\t\toutput += (j > 0 ? delimiter : '') +\n\t\t\t\t\t\t(needsQuotes ? '\"' + value.replace(singleQuoteRx, '\"\"') + '\"' : value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (options.trailingNewline) { output += newline; }\n\t\t\t\n\t\t\treturn output;\n\t\t}\n\t});\n});"],"sourceRoot":""}